{"version":3,"sources":["components/PostsList/PostsList.jsx","api/api.js","api/comments.js","components/NewCommentForm/NewCommentForm.jsx","api/posts.js","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["PostsList","posts","setSelectedPostId","selectedPostId","className","map","post","key","id","userId","title","type","onClick","postId","BASE_URL","getPostComments","a","fetch","comments","json","responce","data","preparedComments","filter","comment","addPostComment","name","email","body","url","options","method","JSON","stringify","deletePostComment","commentId","NewCommentForm","setComments","useState","setName","setEmail","setBody","onSubmit","event","preventDefault","then","placeholder","value","onChange","target","trimLeft","getUserPosts","preparedPosts","getPostDetails","details","PostDetails","selectedDetail","setSelectedDetail","hidden","setHidden","useEffect","detail","result","length","App","setPosts","setPostId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f1126775.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './PostsList.scss';\n\nexport const PostsList = ({ posts, setSelectedPostId, selectedPostId }) => {\n  const handleClick = (postId) => {\n    if (postId === selectedPostId) {\n      setSelectedPostId(0);\n    } else {\n      setSelectedPostId(postId);\n    }\n  };\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {posts.map(post => (\n          <li className=\"PostsList__item\" key={post.id}>\n            <div>\n              <b>\n                [User #\n                {post.userId}\n                ]:\n                {' '}\n              </b>\n              {post.title}\n            </div>\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={() => handleClick(post.id)}\n            >\n              {selectedPostId === post.id ? 'Close' : 'Open'}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nPostsList.propTypes = {\n  posts: PropTypes.arrayOf(\n    PropTypes.shape({\n      userId: PropTypes.number.isRequired,\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      body: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  setSelectedPostId: PropTypes.func.isRequired,\n  selectedPostId: PropTypes.number.isRequired,\n};\n","export const BASE_URL = 'https://mate-api.herokuapp.com';\n","import { BASE_URL } from './api';\n\nexport const getPostComments = async(postId) => {\n  const comments = await fetch(`${BASE_URL}/comments`);\n  const responce = await comments.json();\n  const preparedComments = await responce.data;\n\n  if (postId === 0) {\n    return preparedComments;\n  }\n\n  return preparedComments.filter(comment => comment.postId === postId);\n};\n\nexport const addPostComment = async(selectedPostId, name, email, body) => {\n  const url = `${BASE_URL}/comments/`;\n  const options = {\n    method: 'POST',\n    body: JSON.stringify({\n      selectedPostId, name, email, body,\n    }),\n  };\n\n  return fetch(url, options);\n};\n\nexport const deletePostComment = async(commentId) => {\n  const url = `${BASE_URL}/comments/${commentId}`;\n  const options = {\n    method: 'DELETE',\n  };\n\n  const comments = await fetch(url, options);\n\n  return comments;\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { addPostComment, getPostComments } from '../../api/comments';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = ({ selectedPostId, setComments }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (name && email && body) {\n      addPostComment(selectedPostId, name, email, body)\n        .then(() => getPostComments(selectedPostId))\n        .then(setComments);\n\n      setName('');\n      setEmail('');\n      setBody('');\n    }\n  };\n\n  return (\n    <form className=\"NewCommentForm\" onSubmit={handleSubmit}>\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={event => setName(event.target.value.trimLeft())}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={event => setEmail(event.target.value.trimLeft())}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={event => setBody(event.target.value.trimLeft())}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  selectedPostId: PropTypes.number.isRequired,\n  setComments: PropTypes.func.isRequired,\n};\n","import { BASE_URL } from './api';\n\nexport const getUserPosts = async(userId) => {\n  const posts = await fetch(`${BASE_URL}/posts/`);\n  const responce = await posts.json();\n  const preparedPosts = responce.data;\n\n  if (userId === 0) {\n    return preparedPosts;\n  }\n\n  return preparedPosts.filter(post => post.userId === userId);\n};\n\nexport const getPostDetails = async(postId) => {\n  const details = await fetch(`${BASE_URL}/posts/${postId}`);\n  const responce = await details.json();\n\n  return responce.data;\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { NewCommentForm } from '../NewCommentForm';\nimport { getPostDetails } from '../../api/posts';\nimport { getPostComments, deletePostComment } from '../../api/comments';\nimport './PostDetails.scss';\n\nexport const PostDetails = ({ selectedPostId }) => {\n  const [selectedDetail, setSelectedDetail] = useState(null);\n  const [comments, setComments] = useState(null);\n  const [hidden, setHidden] = useState(false);\n\n  useEffect(() => {\n    getPostDetails(selectedPostId)\n      .then(detail => setSelectedDetail(detail));\n\n    getPostComments(selectedPostId)\n      .then(result => setComments(result));\n  }, [selectedPostId]);\n\n  const hide = () => {\n    setHidden(!hidden);\n  };\n\n  return (\n    selectedDetail && (\n      <div className=\"PostDetails\">\n        <h2>Post details:</h2>\n\n        <section className=\"PostDetails__post\">\n          <p>{selectedDetail.body}</p>\n        </section>\n\n        <section className=\"PostDetails__comments\">\n          {comments.length !== 0 && (\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={hide}\n            >\n              {`${hidden ? 'Show' : 'Hide'} ${comments.length} comments`}\n            </button>\n          )}\n\n          {!hidden && (\n            <ul className=\"PostDetails__list\">\n              {comments.map(comment => (\n                <li className=\"PostDetails__list-item\" key={comment.id}>\n                  <button\n                    type=\"button\"\n                    className=\"PostDetails__remove-button button\"\n                    onClick={() => (\n                      deletePostComment(comment.id)\n                        .then(() => getPostComments(selectedPostId))\n                        .then(data => setComments(data))\n                    )}\n\n                  >\n                    X\n                  </button>\n                  <p>{comment.body}</p>\n                </li>\n              ))}\n            </ul>\n          )}\n        </section>\n\n        <section>\n          <div className=\"PostDetails__form-wrapper\">\n            <NewCommentForm\n              selectedPostId={selectedPostId}\n              comments={comments}\n              setComments={setComments}\n            />\n          </div>\n        </section>\n      </div>\n    ));\n};\n\nPostDetails.propTypes = {\n  selectedPostId: PropTypes.number.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getUserPosts } from './api/posts';\n\nconst App = () => {\n  const [posts, setPosts] = useState([]);\n  const [selectedPostId, setSelectedPostId] = useState(0);\n  const [postId, setPostId] = useState(0);\n\n  useEffect(() => {\n    getUserPosts(postId)\n      .then(setPosts);\n  }, [postId]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            onChange={event => setPostId(+event.target.value)}\n          >\n\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={posts}\n            setSelectedPostId={setSelectedPostId}\n            selectedPostId={selectedPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <PostDetails\n            selectedPostId={selectedPostId}\n          />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}